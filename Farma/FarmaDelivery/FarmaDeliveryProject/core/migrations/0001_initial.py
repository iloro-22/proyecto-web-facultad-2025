# Generated by Django 5.2.7 on 2025-10-18 21:13

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calle', models.CharField(max_length=100)),
                ('numero', models.CharField(max_length=10)),
                ('ciudad', models.CharField(max_length=50)),
                ('provincia', models.CharField(max_length=50)),
                ('codigo_postal', models.CharField(max_length=10)),
                ('pais', models.CharField(default='Argentina', max_length=50)),
            ],
            options={
                'verbose_name': 'Dirección',
                'verbose_name_plural': 'Direcciones',
            },
        ),
        migrations.CreateModel(
            name='ObraSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('plan', models.CharField(max_length=100)),
                ('numero_afiliado', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Obra Social',
                'verbose_name_plural': 'Obras Sociales',
            },
        ),
        migrations.CreateModel(
            name='Farmacia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('matricula', models.CharField(max_length=20, unique=True)),
                ('cuit', models.CharField(max_length=13, unique=True, validators=[django.core.validators.MinLengthValidator(11), django.core.validators.RegexValidator('^\\d+$', 'El CUIT debe contener solo números')])),
                ('telefono', models.CharField(max_length=20)),
                ('email_contacto', models.EmailField(max_length=254)),
                ('horario_apertura', models.TimeField()),
                ('horario_cierre', models.TimeField()),
                ('activa', models.BooleanField(default=True)),
                ('rol', models.CharField(choices=[('CLIENTE', 'Cliente'), ('FARMACIA', 'Farmacia'), ('REPARTIDOR', 'Repartidor'), ('ADMIN', 'Administrador')], default='FARMACIA', max_length=20)),
                ('direccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.direccion')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmacia', to=settings.AUTH_USER_MODEL)),
                ('obras_sociales_aceptadas', models.ManyToManyField(blank=True, related_name='farmacias', to='core.obrasocial')),
            ],
            options={
                'verbose_name': 'Farmacia',
                'verbose_name_plural': 'Farmacias',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.RegexValidator('^\\d+$', 'El DNI debe contener solo números')])),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('rol', models.CharField(choices=[('CLIENTE', 'Cliente'), ('FARMACIA', 'Farmacia'), ('REPARTIDOR', 'Repartidor'), ('ADMIN', 'Administrador')], default='CLIENTE', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cliente', to=settings.AUTH_USER_MODEL)),
                ('direccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.direccion')),
                ('obra_social', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.obrasocial')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('precio_base', models.DecimalField(decimal_places=2, max_digits=10)),
                ('codigo_barras', models.CharField(blank=True, max_length=50, unique=True)),
                ('categoria', models.CharField(blank=True, max_length=100)),
                ('laboratorio', models.CharField(blank=True, max_length=100)),
                ('requiere_receta', models.BooleanField(default=False)),
                ('stock_disponible', models.PositiveIntegerField(default=0)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('farmacia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos', to='core.farmacia')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='ListaProductos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('farmacia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listas_productos', to='core.farmacia')),
                ('productos', models.ManyToManyField(blank=True, to='core.producto')),
            ],
            options={
                'verbose_name': 'Lista de Productos',
                'verbose_name_plural': 'Listas de Productos',
            },
        ),
        migrations.CreateModel(
            name='Repartidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.RegexValidator('^\\d+$', 'El DNI debe contener solo números')])),
                ('telefono', models.CharField(max_length=20)),
                ('vehiculo', models.CharField(blank=True, max_length=50)),
                ('patente', models.CharField(blank=True, max_length=10)),
                ('activo', models.BooleanField(default=True)),
                ('zona_cobertura', models.CharField(blank=True, max_length=100)),
                ('rol', models.CharField(choices=[('CLIENTE', 'Cliente'), ('FARMACIA', 'Farmacia'), ('REPARTIDOR', 'Repartidor'), ('ADMIN', 'Administrador')], default='REPARTIDOR', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='repartidor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Repartidor',
                'verbose_name_plural': 'Repartidores',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_pedido', models.CharField(max_length=20, unique=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('CONFIRMADO', 'Confirmado'), ('PREPARANDO', 'Preparando'), ('LISTO', 'Listo para entrega'), ('EN_CAMINO', 'En camino'), ('ENTREGADO', 'Entregado'), ('CANCELADO', 'Cancelado')], default='PENDIENTE', max_length=20)),
                ('metodo_pago', models.CharField(choices=[('EFECTIVO', 'Efectivo'), ('TARJETA_DEBITO', 'Tarjeta de Débito'), ('TARJETA_CREDITO', 'Tarjeta de Crédito'), ('TRANSFERENCIA', 'Transferencia Bancaria'), ('MERCADO_PAGO', 'Mercado Pago')], max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_entrega_estimada', models.DateTimeField(blank=True, null=True)),
                ('fecha_entrega_real', models.DateTimeField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to='core.cliente')),
                ('direccion_entrega', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_entrega', to='core.direccion')),
                ('farmacia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to='core.farmacia')),
                ('repartidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos', to='core.repartidor')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento_aplicado', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='core.pedido')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.producto')),
            ],
            options={
                'verbose_name': 'Detalle de Pedido',
                'verbose_name_plural': 'Detalles de Pedido',
                'unique_together': {('pedido', 'producto')},
            },
        ),
        migrations.CreateModel(
            name='DescuentoObraSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descuento_porcentaje', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('descuento_fijo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('activo', models.BooleanField(default=True)),
                ('obra_social', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.obrasocial')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descuentos_obra_social', to='core.producto')),
            ],
            options={
                'verbose_name': 'Descuento por Obra Social',
                'verbose_name_plural': 'Descuentos por Obra Social',
                'unique_together': {('producto', 'obra_social')},
            },
        ),
    ]
